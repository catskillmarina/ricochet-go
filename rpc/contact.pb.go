// Code generated by protoc-gen-go.
// source: contact.proto
// DO NOT EDIT!

/*
Package ricochet is a generated protocol buffer package.

It is generated from these files:
	contact.proto
	conversation.proto
	core.proto
	identity.proto
	network.proto

It has these top-level messages:
	Contact
	ContactRequest
	MonitorContactsRequest
	ContactEvent
	AddContactReply
	DeleteContactRequest
	DeleteContactReply
	RejectInboundRequestReply
	ConversationEvent
	MonitorConversationsRequest
	Entity
	Message
	MarkConversationReadRequest
	Reply
	ServerStatusRequest
	ServerStatusReply
	Identity
	IdentityRequest
	MonitorNetworkRequest
	TorProcessStatus
	TorControlStatus
	TorConnectionStatus
	NetworkStatus
	StartNetworkRequest
	StopNetworkRequest
*/
package ricochet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Contact_Status int32

const (
	Contact_UNKNOWN  Contact_Status = 0
	Contact_OFFLINE  Contact_Status = 1
	Contact_ONLINE   Contact_Status = 2
	Contact_REQUEST  Contact_Status = 3
	Contact_REJECTED Contact_Status = 4
)

var Contact_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "OFFLINE",
	2: "ONLINE",
	3: "REQUEST",
	4: "REJECTED",
}
var Contact_Status_value = map[string]int32{
	"UNKNOWN":  0,
	"OFFLINE":  1,
	"ONLINE":   2,
	"REQUEST":  3,
	"REJECTED": 4,
}

func (x Contact_Status) String() string {
	return proto.EnumName(Contact_Status_name, int32(x))
}
func (Contact_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type ContactRequest_Direction int32

const (
	ContactRequest_INBOUND  ContactRequest_Direction = 0
	ContactRequest_OUTBOUND ContactRequest_Direction = 1
)

var ContactRequest_Direction_name = map[int32]string{
	0: "INBOUND",
	1: "OUTBOUND",
}
var ContactRequest_Direction_value = map[string]int32{
	"INBOUND":  0,
	"OUTBOUND": 1,
}

func (x ContactRequest_Direction) String() string {
	return proto.EnumName(ContactRequest_Direction_name, int32(x))
}
func (ContactRequest_Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ContactEvent_Type int32

const (
	ContactEvent_NULL     ContactEvent_Type = 0
	ContactEvent_POPULATE ContactEvent_Type = 1
	ContactEvent_ADD      ContactEvent_Type = 2
	ContactEvent_UPDATE   ContactEvent_Type = 3
	ContactEvent_DELETE   ContactEvent_Type = 4
)

var ContactEvent_Type_name = map[int32]string{
	0: "NULL",
	1: "POPULATE",
	2: "ADD",
	3: "UPDATE",
	4: "DELETE",
}
var ContactEvent_Type_value = map[string]int32{
	"NULL":     0,
	"POPULATE": 1,
	"ADD":      2,
	"UPDATE":   3,
	"DELETE":   4,
}

func (x ContactEvent_Type) String() string {
	return proto.EnumName(ContactEvent_Type_name, int32(x))
}
func (ContactEvent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Contact struct {
	Id            int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Address       string          `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Nickname      string          `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	WhenCreated   string          `protobuf:"bytes,4,opt,name=whenCreated" json:"whenCreated,omitempty"`
	LastConnected string          `protobuf:"bytes,5,opt,name=lastConnected" json:"lastConnected,omitempty"`
	Request       *ContactRequest `protobuf:"bytes,6,opt,name=request" json:"request,omitempty"`
	Status        Contact_Status  `protobuf:"varint,10,opt,name=status,enum=ricochet.Contact_Status" json:"status,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Contact) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contact) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Contact) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Contact) GetWhenCreated() string {
	if m != nil {
		return m.WhenCreated
	}
	return ""
}

func (m *Contact) GetLastConnected() string {
	if m != nil {
		return m.LastConnected
	}
	return ""
}

func (m *Contact) GetRequest() *ContactRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Contact) GetStatus() Contact_Status {
	if m != nil {
		return m.Status
	}
	return Contact_UNKNOWN
}

type ContactRequest struct {
	Direction    ContactRequest_Direction `protobuf:"varint,1,opt,name=direction,enum=ricochet.ContactRequest_Direction" json:"direction,omitempty"`
	Address      string                   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Nickname     string                   `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	Text         string                   `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	FromNickname string                   `protobuf:"bytes,5,opt,name=fromNickname" json:"fromNickname,omitempty"`
	WhenCreated  string                   `protobuf:"bytes,6,opt,name=whenCreated" json:"whenCreated,omitempty"`
	Rejected     bool                     `protobuf:"varint,7,opt,name=rejected" json:"rejected,omitempty"`
}

func (m *ContactRequest) Reset()                    { *m = ContactRequest{} }
func (m *ContactRequest) String() string            { return proto.CompactTextString(m) }
func (*ContactRequest) ProtoMessage()               {}
func (*ContactRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContactRequest) GetDirection() ContactRequest_Direction {
	if m != nil {
		return m.Direction
	}
	return ContactRequest_INBOUND
}

func (m *ContactRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ContactRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ContactRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ContactRequest) GetFromNickname() string {
	if m != nil {
		return m.FromNickname
	}
	return ""
}

func (m *ContactRequest) GetWhenCreated() string {
	if m != nil {
		return m.WhenCreated
	}
	return ""
}

func (m *ContactRequest) GetRejected() bool {
	if m != nil {
		return m.Rejected
	}
	return false
}

type MonitorContactsRequest struct {
}

func (m *MonitorContactsRequest) Reset()                    { *m = MonitorContactsRequest{} }
func (m *MonitorContactsRequest) String() string            { return proto.CompactTextString(m) }
func (*MonitorContactsRequest) ProtoMessage()               {}
func (*MonitorContactsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ContactEvent struct {
	Type ContactEvent_Type `protobuf:"varint,1,opt,name=type,enum=ricochet.ContactEvent_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Subject:
	//	*ContactEvent_Contact
	//	*ContactEvent_Request
	Subject isContactEvent_Subject `protobuf_oneof:"subject"`
}

func (m *ContactEvent) Reset()                    { *m = ContactEvent{} }
func (m *ContactEvent) String() string            { return proto.CompactTextString(m) }
func (*ContactEvent) ProtoMessage()               {}
func (*ContactEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isContactEvent_Subject interface {
	isContactEvent_Subject()
}

type ContactEvent_Contact struct {
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,oneof"`
}
type ContactEvent_Request struct {
	Request *ContactRequest `protobuf:"bytes,3,opt,name=request,oneof"`
}

func (*ContactEvent_Contact) isContactEvent_Subject() {}
func (*ContactEvent_Request) isContactEvent_Subject() {}

func (m *ContactEvent) GetSubject() isContactEvent_Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *ContactEvent) GetType() ContactEvent_Type {
	if m != nil {
		return m.Type
	}
	return ContactEvent_NULL
}

func (m *ContactEvent) GetContact() *Contact {
	if x, ok := m.GetSubject().(*ContactEvent_Contact); ok {
		return x.Contact
	}
	return nil
}

func (m *ContactEvent) GetRequest() *ContactRequest {
	if x, ok := m.GetSubject().(*ContactEvent_Request); ok {
		return x.Request
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ContactEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ContactEvent_OneofMarshaler, _ContactEvent_OneofUnmarshaler, _ContactEvent_OneofSizer, []interface{}{
		(*ContactEvent_Contact)(nil),
		(*ContactEvent_Request)(nil),
	}
}

func _ContactEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ContactEvent)
	// subject
	switch x := m.Subject.(type) {
	case *ContactEvent_Contact:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Contact); err != nil {
			return err
		}
	case *ContactEvent_Request:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Request); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ContactEvent.Subject has unexpected type %T", x)
	}
	return nil
}

func _ContactEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ContactEvent)
	switch tag {
	case 2: // subject.contact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Contact)
		err := b.DecodeMessage(msg)
		m.Subject = &ContactEvent_Contact{msg}
		return true, err
	case 3: // subject.request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContactRequest)
		err := b.DecodeMessage(msg)
		m.Subject = &ContactEvent_Request{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ContactEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ContactEvent)
	// subject
	switch x := m.Subject.(type) {
	case *ContactEvent_Contact:
		s := proto.Size(x.Contact)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContactEvent_Request:
		s := proto.Size(x.Request)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AddContactReply struct {
}

func (m *AddContactReply) Reset()                    { *m = AddContactReply{} }
func (m *AddContactReply) String() string            { return proto.CompactTextString(m) }
func (*AddContactReply) ProtoMessage()               {}
func (*AddContactReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteContactRequest struct {
	Id      int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *DeleteContactRequest) Reset()                    { *m = DeleteContactRequest{} }
func (m *DeleteContactRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContactRequest) ProtoMessage()               {}
func (*DeleteContactRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteContactRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeleteContactRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type DeleteContactReply struct {
}

func (m *DeleteContactReply) Reset()                    { *m = DeleteContactReply{} }
func (m *DeleteContactReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteContactReply) ProtoMessage()               {}
func (*DeleteContactReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RejectInboundRequestReply struct {
}

func (m *RejectInboundRequestReply) Reset()                    { *m = RejectInboundRequestReply{} }
func (m *RejectInboundRequestReply) String() string            { return proto.CompactTextString(m) }
func (*RejectInboundRequestReply) ProtoMessage()               {}
func (*RejectInboundRequestReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*Contact)(nil), "ricochet.Contact")
	proto.RegisterType((*ContactRequest)(nil), "ricochet.ContactRequest")
	proto.RegisterType((*MonitorContactsRequest)(nil), "ricochet.MonitorContactsRequest")
	proto.RegisterType((*ContactEvent)(nil), "ricochet.ContactEvent")
	proto.RegisterType((*AddContactReply)(nil), "ricochet.AddContactReply")
	proto.RegisterType((*DeleteContactRequest)(nil), "ricochet.DeleteContactRequest")
	proto.RegisterType((*DeleteContactReply)(nil), "ricochet.DeleteContactReply")
	proto.RegisterType((*RejectInboundRequestReply)(nil), "ricochet.RejectInboundRequestReply")
	proto.RegisterEnum("ricochet.Contact_Status", Contact_Status_name, Contact_Status_value)
	proto.RegisterEnum("ricochet.ContactRequest_Direction", ContactRequest_Direction_name, ContactRequest_Direction_value)
	proto.RegisterEnum("ricochet.ContactEvent_Type", ContactEvent_Type_name, ContactEvent_Type_value)
}

func init() { proto.RegisterFile("contact.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0xd1, 0x72, 0x93, 0x40,
	0x14, 0x2d, 0x84, 0x02, 0xb9, 0x69, 0x23, 0xdd, 0xe9, 0x38, 0xd8, 0xbe, 0x30, 0x3b, 0x8e, 0x93,
	0x17, 0xd1, 0x89, 0xbe, 0xdb, 0x34, 0xd0, 0x31, 0x1a, 0x21, 0x6e, 0x61, 0x7c, 0x26, 0xb0, 0x4e,
	0xd1, 0x74, 0x89, 0xb0, 0x51, 0xf3, 0x43, 0x7e, 0x8b, 0x9f, 0xe3, 0x27, 0x38, 0xbb, 0x40, 0x6a,
	0x12, 0x75, 0x1c, 0xdf, 0xf6, 0x9e, 0x73, 0x2e, 0xbb, 0x7b, 0xee, 0x59, 0xe0, 0x38, 0x2d, 0x18,
	0x4f, 0x52, 0xee, 0x2e, 0xcb, 0x82, 0x17, 0xc8, 0x2c, 0xf3, 0xb4, 0x48, 0x6f, 0x28, 0xc7, 0xdf,
	0x55, 0x30, 0xc6, 0x35, 0x87, 0xfa, 0xa0, 0xe6, 0x99, 0xad, 0x38, 0xca, 0xe0, 0x90, 0xa8, 0x79,
	0x86, 0x6c, 0x30, 0x92, 0x2c, 0x2b, 0x69, 0x55, 0xd9, 0xaa, 0xa3, 0x0c, 0xba, 0xa4, 0x2d, 0xd1,
	0x19, 0x98, 0x2c, 0x4f, 0x3f, 0xb2, 0xe4, 0x96, 0xda, 0x1d, 0x49, 0x6d, 0x6a, 0xe4, 0x40, 0xef,
	0xcb, 0x0d, 0x65, 0xe3, 0x92, 0x26, 0x9c, 0x66, 0xb6, 0x26, 0xe9, 0x5f, 0x21, 0xf4, 0x10, 0x8e,
	0x17, 0x49, 0xc5, 0xc7, 0x05, 0x63, 0x34, 0x15, 0x9a, 0x43, 0xa9, 0xd9, 0x06, 0xd1, 0x10, 0x8c,
	0x92, 0x7e, 0x5a, 0xd1, 0x8a, 0xdb, 0xba, 0xa3, 0x0c, 0x7a, 0x43, 0xdb, 0x6d, 0x4f, 0xed, 0x36,
	0x27, 0x26, 0x35, 0x4f, 0x5a, 0x21, 0x7a, 0x0a, 0x7a, 0xc5, 0x13, 0xbe, 0xaa, 0x6c, 0x70, 0x94,
	0x41, 0xff, 0x37, 0x2d, 0xee, 0xb5, 0xe4, 0x49, 0xa3, 0xc3, 0x13, 0xd0, 0x6b, 0x04, 0xf5, 0xc0,
	0x88, 0x83, 0xd7, 0x41, 0xf8, 0x2e, 0xb0, 0x0e, 0x44, 0x11, 0x5e, 0x5d, 0x4d, 0x27, 0x81, 0x6f,
	0x29, 0x08, 0x40, 0x0f, 0x03, 0xb9, 0x56, 0x05, 0x41, 0xfc, 0xb7, 0xb1, 0x7f, 0x1d, 0x59, 0x1d,
	0x74, 0x04, 0x26, 0xf1, 0x5f, 0xf9, 0xe3, 0xc8, 0xf7, 0x2c, 0x0d, 0x7f, 0x53, 0xa1, 0xbf, 0x7d,
	0x30, 0x74, 0x01, 0xdd, 0x2c, 0x2f, 0x69, 0xca, 0xf3, 0x82, 0x49, 0x63, 0xfb, 0x43, 0xfc, 0xa7,
	0x5b, 0xb8, 0x5e, 0xab, 0x24, 0x77, 0x4d, 0xff, 0x39, 0x03, 0x04, 0x1a, 0xa7, 0x5f, 0x79, 0x63,
	0xbe, 0x5c, 0x23, 0x0c, 0x47, 0xef, 0xcb, 0xe2, 0x36, 0x68, 0x7b, 0x6a, 0xd3, 0xb7, 0xb0, 0xdd,
	0xd9, 0xe9, 0xfb, 0xb3, 0x3b, 0x03, 0xb3, 0xa4, 0x1f, 0xea, 0xb1, 0x19, 0x8e, 0x32, 0x30, 0xc9,
	0xa6, 0xc6, 0x8f, 0xa0, 0xbb, 0xb9, 0x83, 0x30, 0x6a, 0x12, 0x5c, 0x86, 0x71, 0xe0, 0x59, 0x07,
	0xc2, 0xa8, 0x30, 0x8e, 0xea, 0x4a, 0xc1, 0x36, 0xdc, 0x7f, 0x53, 0xb0, 0x9c, 0x17, 0x65, 0xe3,
	0x40, 0xd5, 0x58, 0x80, 0x7f, 0x28, 0x70, 0xd4, 0x60, 0xfe, 0x67, 0xca, 0x38, 0x7a, 0x02, 0x1a,
	0x5f, 0x2f, 0x69, 0xe3, 0xdd, 0xf9, 0x9e, 0x77, 0x52, 0xe5, 0x46, 0xeb, 0x25, 0x25, 0x52, 0x88,
	0x1e, 0x83, 0xd1, 0x44, 0x5d, 0xfa, 0xd5, 0x1b, 0x9e, 0xec, 0xf5, 0xbc, 0x3c, 0x20, 0xad, 0x06,
	0x3d, 0xbf, 0x0b, 0x59, 0xe7, 0xef, 0x21, 0x13, 0x5d, 0x8d, 0x14, 0xbf, 0x00, 0x4d, 0x6c, 0x89,
	0x4c, 0xd0, 0x82, 0x78, 0x3a, 0xad, 0x2f, 0x38, 0x0b, 0x67, 0xf1, 0x74, 0x14, 0x89, 0xc0, 0x18,
	0xd0, 0x19, 0x79, 0x9e, 0xa5, 0x8a, 0xe4, 0xc4, 0x33, 0x4f, 0x80, 0x1d, 0xb1, 0xf6, 0xfc, 0xa9,
	0x1f, 0xf9, 0x96, 0x76, 0xd9, 0x05, 0xa3, 0x5a, 0xcd, 0x85, 0x6d, 0xf8, 0x04, 0xee, 0x8d, 0xb2,
	0x6c, 0xb3, 0xd7, 0x72, 0xb1, 0xc6, 0x17, 0x70, 0xea, 0xd1, 0x05, 0xe5, 0x74, 0x27, 0x4d, 0xff,
	0xfc, 0x3e, 0xf1, 0x29, 0xa0, 0x9d, 0x2f, 0x88, 0xef, 0x9e, 0xc3, 0x03, 0x22, 0x67, 0x35, 0x61,
	0xf3, 0x62, 0xc5, 0xb2, 0xf6, 0xf9, 0x08, 0x72, 0xae, 0xcb, 0x3f, 0xc3, 0xb3, 0x9f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xe5, 0x62, 0x19, 0x3f, 0x2a, 0x04, 0x00, 0x00,
}
