// Code generated by protoc-gen-go.
// source: conversation.proto
// DO NOT EDIT!

package ricochet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConversationEvent_Type int32

const (
	ConversationEvent_NULL     ConversationEvent_Type = 0
	ConversationEvent_POPULATE ConversationEvent_Type = 1
	ConversationEvent_RECEIVE  ConversationEvent_Type = 2
	ConversationEvent_SEND     ConversationEvent_Type = 3
	ConversationEvent_UPDATE   ConversationEvent_Type = 4
)

var ConversationEvent_Type_name = map[int32]string{
	0: "NULL",
	1: "POPULATE",
	2: "RECEIVE",
	3: "SEND",
	4: "UPDATE",
}
var ConversationEvent_Type_value = map[string]int32{
	"NULL":     0,
	"POPULATE": 1,
	"RECEIVE":  2,
	"SEND":     3,
	"UPDATE":   4,
}

func (x ConversationEvent_Type) String() string {
	return proto.EnumName(ConversationEvent_Type_name, int32(x))
}
func (ConversationEvent_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type Message_Status int32

const (
	Message_NULL  Message_Status = 0
	Message_ERROR Message_Status = 1
	// Outbound
	Message_QUEUED    Message_Status = 2
	Message_SENDING   Message_Status = 3
	Message_DELIVERED Message_Status = 4
	// Inbound
	Message_UNREAD Message_Status = 5
	Message_READ   Message_Status = 6
)

var Message_Status_name = map[int32]string{
	0: "NULL",
	1: "ERROR",
	2: "QUEUED",
	3: "SENDING",
	4: "DELIVERED",
	5: "UNREAD",
	6: "READ",
}
var Message_Status_value = map[string]int32{
	"NULL":      0,
	"ERROR":     1,
	"QUEUED":    2,
	"SENDING":   3,
	"DELIVERED": 4,
	"UNREAD":    5,
	"READ":      6,
}

func (x Message_Status) String() string {
	return proto.EnumName(Message_Status_name, int32(x))
}
func (Message_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

type ConversationEvent struct {
	Type ConversationEvent_Type `protobuf:"varint,1,opt,name=type,enum=ricochet.ConversationEvent_Type" json:"type,omitempty"`
	Msg  *Message               `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *ConversationEvent) Reset()                    { *m = ConversationEvent{} }
func (m *ConversationEvent) String() string            { return proto.CompactTextString(m) }
func (*ConversationEvent) ProtoMessage()               {}
func (*ConversationEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ConversationEvent) GetType() ConversationEvent_Type {
	if m != nil {
		return m.Type
	}
	return ConversationEvent_NULL
}

func (m *ConversationEvent) GetMsg() *Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

type MonitorConversationsRequest struct {
}

func (m *MonitorConversationsRequest) Reset()                    { *m = MonitorConversationsRequest{} }
func (m *MonitorConversationsRequest) String() string            { return proto.CompactTextString(m) }
func (*MonitorConversationsRequest) ProtoMessage()               {}
func (*MonitorConversationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Entity struct {
	// address MAY be unspecified for self
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	IsSelf  bool   `protobuf:"varint,3,opt,name=isSelf" json:"isSelf,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Entity) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Entity) GetIsSelf() bool {
	if m != nil {
		return m.IsSelf
	}
	return false
}

type Message struct {
	Sender    *Entity `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Recipient *Entity `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
	Timestamp int64   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	// Identifiers are unique for the tuple of (sender, recipient, direction)
	// within a single session, and should be randomized between sessions to
	// reduce the chance of collision.
	Identifier uint64         `protobuf:"varint,4,opt,name=identifier" json:"identifier,omitempty"`
	Status     Message_Status `protobuf:"varint,5,opt,name=status,enum=ricochet.Message_Status" json:"status,omitempty"`
	Text       string         `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Message) GetSender() *Entity {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetRecipient() *Entity {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Message) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Message) GetIdentifier() uint64 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *Message) GetStatus() Message_Status {
	if m != nil {
		return m.Status
	}
	return Message_NULL
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type MarkConversationReadRequest struct {
	Entity             *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	LastRecvIdentifier uint64  `protobuf:"varint,2,opt,name=lastRecvIdentifier" json:"lastRecvIdentifier,omitempty"`
}

func (m *MarkConversationReadRequest) Reset()                    { *m = MarkConversationReadRequest{} }
func (m *MarkConversationReadRequest) String() string            { return proto.CompactTextString(m) }
func (*MarkConversationReadRequest) ProtoMessage()               {}
func (*MarkConversationReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MarkConversationReadRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *MarkConversationReadRequest) GetLastRecvIdentifier() uint64 {
	if m != nil {
		return m.LastRecvIdentifier
	}
	return 0
}

func init() {
	proto.RegisterType((*ConversationEvent)(nil), "ricochet.ConversationEvent")
	proto.RegisterType((*MonitorConversationsRequest)(nil), "ricochet.MonitorConversationsRequest")
	proto.RegisterType((*Entity)(nil), "ricochet.Entity")
	proto.RegisterType((*Message)(nil), "ricochet.Message")
	proto.RegisterType((*MarkConversationReadRequest)(nil), "ricochet.MarkConversationReadRequest")
	proto.RegisterEnum("ricochet.ConversationEvent_Type", ConversationEvent_Type_name, ConversationEvent_Type_value)
	proto.RegisterEnum("ricochet.Message_Status", Message_Status_name, Message_Status_value)
}

func init() { proto.RegisterFile("conversation.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0x41, 0x8f, 0x93, 0x4c,
	0x18, 0xc7, 0x5f, 0x0a, 0xa5, 0xe5, 0xe9, 0xab, 0x99, 0x7d, 0x0e, 0x86, 0x64, 0xd5, 0x10, 0xbc,
	0x70, 0x22, 0xa6, 0x7a, 0xf2, 0xd6, 0x2c, 0x13, 0xd3, 0xa4, 0xed, 0xd6, 0xe9, 0xb2, 0x17, 0x4f,
	0x08, 0xcf, 0xae, 0x13, 0xb7, 0x80, 0xcc, 0x6c, 0xb5, 0x1f, 0xcb, 0xef, 0xe0, 0x07, 0x33, 0x4c,
	0xd9, 0x40, 0x52, 0xbd, 0x31, 0xf3, 0xff, 0xcd, 0xe4, 0x99, 0xdf, 0x1f, 0xc0, 0xbc, 0x2a, 0x0f,
	0xd4, 0xa8, 0x4c, 0xcb, 0xaa, 0x8c, 0xeb, 0xa6, 0xd2, 0x15, 0x4e, 0x1b, 0x99, 0x57, 0xf9, 0x57,
	0xd2, 0xe1, 0x2f, 0x0b, 0x2e, 0xae, 0x06, 0x00, 0x3f, 0x50, 0xa9, 0xf1, 0x3d, 0x38, 0xfa, 0x58,
	0x93, 0x6f, 0x05, 0x56, 0xf4, 0x7c, 0x1e, 0xc4, 0x4f, 0x78, 0x7c, 0x86, 0xc6, 0x37, 0xc7, 0x9a,
	0x84, 0xa1, 0xf1, 0x0d, 0xd8, 0x7b, 0x75, 0xef, 0x8f, 0x02, 0x2b, 0x9a, 0xcd, 0x2f, 0xfa, 0x43,
	0x6b, 0x52, 0x2a, 0xbb, 0x27, 0xd1, 0xa6, 0xe1, 0x02, 0x9c, 0xf6, 0x08, 0x4e, 0xc1, 0xd9, 0xa4,
	0xab, 0x15, 0xfb, 0x0f, 0xff, 0x87, 0xe9, 0xf6, 0x7a, 0x9b, 0xae, 0x16, 0x37, 0x9c, 0x59, 0x38,
	0x83, 0x89, 0xe0, 0x57, 0x7c, 0x79, 0xcb, 0xd9, 0xa8, 0x85, 0x76, 0x7c, 0x93, 0x30, 0x1b, 0x01,
	0xdc, 0x74, 0x9b, 0xb4, 0x88, 0x13, 0xbe, 0x82, 0xcb, 0x75, 0x55, 0x4a, 0x5d, 0x35, 0xc3, 0x71,
	0x94, 0xa0, 0xef, 0x8f, 0xa4, 0x74, 0xf8, 0x01, 0x5c, 0x5e, 0x6a, 0xa9, 0x8f, 0xe8, 0xc3, 0x24,
	0x2b, 0x8a, 0x86, 0x94, 0x32, 0x43, 0x79, 0xe2, 0x69, 0x89, 0x2f, 0xc0, 0x95, 0x6a, 0x47, 0x0f,
	0x77, 0xbe, 0x1d, 0x58, 0xd1, 0x54, 0x74, 0xab, 0xf0, 0xf7, 0x08, 0x26, 0xdd, 0xb8, 0x18, 0x81,
	0xab, 0xa8, 0x2c, 0xa8, 0x31, 0x1a, 0x66, 0x73, 0xd6, 0xbf, 0xe8, 0x74, 0xbf, 0xe8, 0x72, 0x8c,
	0xc1, 0x6b, 0x28, 0x97, 0xb5, 0xa4, 0x52, 0x77, 0xcf, 0x3f, 0x87, 0x7b, 0x04, 0x5f, 0x82, 0xa7,
	0xe5, 0x9e, 0x94, 0xce, 0xf6, 0xb5, 0x19, 0xc0, 0x16, 0xfd, 0x06, 0xbe, 0x06, 0x90, 0x05, 0x95,
	0x5a, 0xde, 0x49, 0x6a, 0x7c, 0x27, 0xb0, 0x22, 0x47, 0x0c, 0x76, 0xf0, 0x2d, 0xb8, 0x4a, 0x67,
	0xfa, 0x51, 0xf9, 0x63, 0x53, 0x8f, 0x7f, 0x66, 0x3a, 0xde, 0x99, 0x5c, 0x74, 0x1c, 0x22, 0x38,
	0x9a, 0x7e, 0x6a, 0xdf, 0x35, 0x12, 0xcc, 0x77, 0xf8, 0x19, 0xdc, 0x13, 0x35, 0x68, 0xc2, 0x83,
	0x31, 0x17, 0xe2, 0x5a, 0x30, 0xab, 0xf5, 0xfd, 0x29, 0xe5, 0x29, 0x4f, 0xd8, 0xa8, 0xad, 0xa4,
	0x6d, 0x61, 0xb9, 0xf9, 0xc8, 0x6c, 0x7c, 0x06, 0x5e, 0xc2, 0x57, 0xcb, 0x5b, 0x2e, 0x78, 0xc2,
	0x1c, 0xd3, 0xcb, 0x46, 0xf0, 0x45, 0xc2, 0xc6, 0xed, 0x45, 0xe6, 0xcb, 0x0d, 0x7f, 0xc0, 0xe5,
	0x3a, 0x6b, 0xbe, 0x0d, 0xeb, 0x11, 0x94, 0x15, 0x5d, 0x43, 0xad, 0x59, 0x32, 0x52, 0xfe, 0x6d,
	0xf6, 0x94, 0x63, 0x0c, 0xf8, 0x90, 0x29, 0x2d, 0x28, 0x3f, 0x2c, 0x7b, 0x27, 0x23, 0xe3, 0xe4,
	0x2f, 0xc9, 0x17, 0xd7, 0xfc, 0xdf, 0xef, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x9e, 0xac,
	0x63, 0xf5, 0x02, 0x00, 0x00,
}
